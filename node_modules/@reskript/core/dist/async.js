export const pFilter = (array, callback) => {
    return array.reduce(async (previous, current, index) => {
        const [output, keep] = await Promise.all([previous, callback(current, index)]);
        if (keep) {
            output.push(current);
        }
        return output;
    }, Promise.resolve([]));
};
export const pReduce = (array, callback, initial) => {
    return array.reduce(async (previous, item, index) => {
        const output = await previous;
        return callback(output, item, index);
    }, Promise.resolve(initial));
};
export const pMap = (array, callback) => {
    return Promise.all(array.map(callback));
};
