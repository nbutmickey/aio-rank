import fs from 'node:fs';
import babel from '@babel/core';
import glob from 'glob';
export const createTestRunner = (cwd, tools, babelOptions) => {
    const { test, expect } = tools;
    const transformAndSnapshot = (description, inputCode, filename) => test(description, () => {
        var _a;
        const output = babel.transformSync(inputCode, {
            filename,
            ...babelOptions,
        });
        expect((_a = output === null || output === void 0 ? void 0 : output.code) !== null && _a !== void 0 ? _a : '').toMatchSnapshot();
    });
    return (suite) => {
        const fixtures = suite
            ? glob.sync(`${cwd}/fixtures/${suite}/**/*.{js,tsx}`)
            : glob.sync(`${cwd}/fixtures/**/*.{js,tsx}`);
        for (const fixture of fixtures) {
            const code = fs.readFileSync(fixture, 'utf-8');
            const description = code.split('\n')[0].substring(3);
            transformAndSnapshot(description, code, fixture);
        }
    };
};
