import { TransformOptions } from '@babel/core';
import { BuildEntry } from './shared.js';
import { WebpackFinalize } from './webpack.js';
import { ViteFinalize } from './vite.js';
export type ThirdPartyUse = 'antd' | 'lodash' | 'styled-components' | 'emotion' | 'reflect-metadata' | 'tailwind';
export interface BuildStyleSettingsBase {
    readonly resources: string[];
    readonly lessVariables: Record<string, string>;
    readonly modules: boolean | ((resoruce: string) => boolean);
}
export interface WebpackBuildStyleSettings extends BuildStyleSettingsBase {
    readonly extract: boolean;
}
export type ViteBuildStyleSettings = BuildStyleSettingsBase;
export interface BuildScriptSettings {
    readonly babel: boolean | ((resoruce: string) => boolean);
    readonly polyfill: boolean;
    readonly displayName: boolean | 'auto';
    readonly finalize: (babelConfig: TransformOptions, env: BuildEntry) => TransformOptions | Promise<TransformOptions>;
}
export type Severity = 'off' | 'print' | 'warn' | 'error';
export type RuleConfig<T> = 'off' | 'print' | [Severity, T];
export type OptionalRuleConfig<T> = Severity | [Severity, T];
export interface SourceFilter {
    includes?: string[];
    excludes?: string[];
}
export interface BuildInspectInitialResource {
    readonly count: RuleConfig<number>;
    readonly totalSize: RuleConfig<number>;
    readonly sizeDeviation: RuleConfig<number>;
    readonly disallowImports: RuleConfig<string[]>;
}
export interface BuildInspectSettings {
    readonly initialResources: BuildInspectInitialResource;
    readonly duplicatePackages: OptionalRuleConfig<SourceFilter>;
    readonly htmlImportable: OptionalRuleConfig<SourceFilter>;
}
export interface BuildSettings {
    readonly uses: ThirdPartyUse[];
    readonly publicPath?: string;
    readonly thirdParty: boolean;
    readonly reportLintErrors: boolean;
    readonly largeAssetSize: number;
    readonly appTitle: string;
    readonly favicon?: string;
    readonly appContainerId?: string;
    readonly transformEntryHtml: (html: string) => string;
    readonly excludeFeatures: string[];
    readonly script: BuildScriptSettings;
    readonly inspect: BuildInspectSettings;
}
export interface WebpackBuildSettings extends BuildSettings {
    readonly finalize: WebpackFinalize;
    readonly style: WebpackBuildStyleSettings;
}
export interface ViteBuildSettings extends BuildSettings {
    readonly finalize: ViteFinalize;
    readonly style: ViteBuildStyleSettings;
}
